exit
node_a.shortest_paths_to_all_nodes
node_a.shortest_path_to("f")
exit
node_a.shortest_path_to("f")
exit
node_a.shortest_paths_to_all_nodes
exit
prev_value
result
exit
result
exit
fexit
3.value
initial_node.path_weight
new_path_weight
path_weight_to_self
current_path_weight
initial_node.path_weight["d"]
child.value
self.value
c
result
exit
result
exit
result[:something]
result["h"]
result["i"]
result["b"]
result
exit
c
new_path_weight
n
path_weight[self.value][0]
path_weight[self.value]
self.value
path_weight
c
n
exit
path_weight
path_weight["e"] = true
path_weight
exit
path_weight
n
new_path_weight
n
current_path_weight.nil?
child.value
path_weight[child.value]
n
exit
path_weight
self.value
c
n
c
n
current_path_weight
child.value
path_weight
n
new_path_weight
path_weight_to_self
n
current_path_weight
child.value
children_queue.map(&:value)
self.value
exit
Array.new{0}[0]
Array.new{0}[1]
Array.new{0}
Arary.new{0}
children_queue.map(&:value)
children_queue
exit
child.value
self.value
path_weight
children_queue.map(&:value)
exit
children_queue.map(&:value)
children_queue
child.value
path_weight
self.value
exit
node_a.children.map(&:first).sort{|el| node_a.weight(el)}.map(&:value)
node_a.children.map(&:first).sort{|el| node_a.weight(el)}
node_a.children.map(&:first).map(&:value)
node_a.children.sort{|el| node_a.weight(el[0])}.map(&:first).map(&:value)
node_a.children.sort{|el| node_a.weight(el[0])}.map(&:first)
node_a.children.sort{|el| node_a.weight(el[0])}[0][0].class
node_a.children.sort{|el| node_a.weight(el[0])}[0].class
node_a.children.sort{|el| node_a.weight(el[0])}[0]class
node_a.children.sort{|el| node_a.weight(el[0])}.class
node_a.children.sort{|el| node_a.weight(el[0])}[0].value
node_a.children.sort{|el| node_a.weight(el[0])}[0]
node_a.children.sort{|el| node_a.weight(el[0])}.map(&:value)
node_a.children.sort{|el| node_a.weight(el[0])}
node_a.children.sort{|el| node_a.weight(el)}
node_a.children.sort{|el| el[0].value}
node_a.children.sort{|el1, el2| el1.value <=> el2.value}
node_a.children.sort{|el| el.value}
node_a.children.sort{|el| el.value}.map(&:value)
node_h
exit
node_h
n
c
parent_idx
child_idx

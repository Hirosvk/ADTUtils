c
n
node.children.map(&:value)
self.children.map(&:value)
self.parent
node.value
self.value
exit
self.parent.children.map(&:value)
node.parent.children.map(&:value)
self.parent.value
node.parent.value
exit
self.parent.value
node.parent.value
node.parent
node.value
n
exit
n
self.parent.children.map(&:value)
node.parent.value
self.parent.value
self.children.length
node.value
node.children.map(&:value)
n
replace_idx
n
node.value
self.value
exit
self.children.map(&:value)
node.value
self.value
exit
node.children.map(&:value)
exit
exiut
node.value
node.children.map(&:value)
self.children.map(&:value)
self.value
exit
value
n
prc.call(self.value)
prc
self.value
s
n
searched.map(&:value)
searched.length
searched
n
result
n
child_node.value
chlild_node.value
@children.length
c

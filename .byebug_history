exit
node.children.map(&:value)
node.parent.value
self.children.map(&:value)
node.value
self.value
exit
self.value
exit
self.parent.right_child.parent.value
self.parent.right_child.parent
self.parent.right_child.value
self.parent.rigth_child.value
self.parent.children.map(&:value)
self.parent.value
self.parent
self.value
c
node.children.map(&:value)
self.parent.value
node.value
self.value
c
added_node.parent.value
added_node.value
c
@root.left_child.parent.children.map(&:value)
@
@root.left_child.parent
@root.left_child.value
@root.parent
@root.children.map(&:value)
@root.value
@root
c
n
node.children.map(&:value)
self.children.map(&:value)
node.parent
self.parent.value
self.parent
self.value
exit
n
c
@root.left_child.right_child.value
@root.left_child.right_child
@root.lefth_child.children.map(&:value)
@root.lefth_child.right_child
@root.lefth_child.rigth_child
c
@root.left_child.left_child.value
@root.left_child.left_child
@root.left_child.right_child
@root.left_child.children.map(&:value)
@root.left_child.children.left_child
@root.right_child.value
@root.left_child.value
@root.value
c
@root.left_child.value
@root.right_child.value
@root.right_child
c
@root.left_child.value
@root.left_child
@root.value
exit
self.parent.children.map(&:value)
self.parent.value
self.value
replace_idx
c
replace_idx
self.parent.value
self.value
exit
@root.right_child.value
@root.right_child
@root.children.map(&:value)
exit
@root.right_child
right.value
left.value
left
n
@root.left_child.value
@root.left_child
exit
@root.value
n
node.right_child.value
node.left_child.value
n
node.value
exit
@root.children.map(&:value)
@root.value
c
child_node.value
parent_node.value
exit
@last.value
@last.node
@last
parent_node.value
c
n
node.children.map(&:value)
self.children.map(&:value)
self.parent
node.value
self.value
exit
self.parent.children.map(&:value)
node.parent.children.map(&:value)
self.parent.value
node.parent.value
exit
self.parent.value
node.parent.value
node.parent
node.value
n
exit
n
self.parent.children.map(&:value)
node.parent.value
self.parent.value
self.children.length
node.value
node.children.map(&:value)
n
replace_idx
n
node.value
self.value
exit
self.children.map(&:value)
node.value
self.value
exit
node.children.map(&:value)
exit
exiut
node.value
node.children.map(&:value)
self.children.map(&:value)
self.value
exit
value
n
prc.call(self.value)
prc
self.value
s
n
searched.map(&:value)
searched.length
searched
n
result
n
child_node.value
chlild_node.value
@children.length
c
